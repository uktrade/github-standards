name: Docker image build and publish to AWS ECR
on:
  workflow_call:
    inputs:
      ecr_repo:
        description: The name of the repository the image will be pushed to.
        type: string
        required: true
      image_tags:
        description: Tags to apply to images. Multiple tags can be provided in a comma separated format
        type: string
        required: true

jobs:
  docker-build-and-push:
    concurrency:
      group: docker-publish-${{ github.ref }}
      cancel-in-progress: false

    permissions:
      contents: read
      id-token: write

    name: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@555a8e9ce6a5e366d51c2da432d183bddad135f6
        with:
          role-to-assume: ${{ secrets.oidc_iam_role }}
          aws-region: eu-west-2

      - name: Check that the repository exists
        env:
          ECR_REPOSITORY: ${{ inputs.ecr_repo }}
        run: |
          if [[ -z `aws ecr describe-repositories | jq -r ".repositories.[] | .repositoryName" | grep $ECR_REPOSITORY` ]]; then
          aws ecr create-repository --repository-name $ECR_REPOSITORY
          else
          echo "Repository exists."
          fi

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@d63b14614fe5d7fc5e5e52c523dea4e876816cc4

      - name: Create docker tags
        id: create-docker-tags
        shell: bash
        run: |
          IFS=,
          TAG_COMMAND=""
          read -ra tags <<<${{ inputs.image_tags }}
          for tag in "${tags[@]}"
          do
              TAG_COMMAND="$TAG_COMMAND ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repo }}:$tag"
          done
          echo "tags=$TAG_COMMAND" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: setup
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
        with:
          platforms: linux/amd64,linux/arm64

      - name: Build and push Docker image to Amazon ECR
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          platforms: ${{ steps.setup.outputs.platforms }}
          push: true
          target: release
          tags: ${{ steps.create-docker-tags.outputs.tags }}
          provenance: false # This is here to avoid ecr having an image for unknown/unknown
